{"version":3,"sources":["serviceWorker.js","components/RatingBar.js","components/Card.js","components/PaginationBar.js","components/Modal.js","components/Cart.js","components/MyWebPage.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","RatingBar","props","rating","className","aria-hidden","Card","imgPath","label","price","discountPercentage","comments","clickHandler","onClick","style","cursor","id","width","height","src","Math","floor","PaginationBar","icon","margin","display","alignItems","justifyContent","fontWeight","paddingTop","fontSize","Modal","isShow","quitModal","content","imgSource","addToCart","addToCartHandler","increaseQuantity","increaseQuantityHandler","decreaseQuantity","decreaseQuantityHandler","count","inStock","position","zIndex","left","top","overflow","backgroundColor","padding","border","color","float","map","link","require","Cart","products","JSON","parse","localStorage","getItem","e","a","preventDefault","data","name","phone","email","address","fetch","process","method","mode","headers","body","stringify","status","alert","clear","useState","changeName","changePhone","changeEmail","changeAdress","flexDirection","onSubmit","onChange","target","value","placeholder","product","productName","quantity","MyWebPage","input","changeInput","toggle","changeToggle","baseUrl","page","changePage","maxPages","changeMaxPages","changeProductName","minPrice","changeMinPrice","maxPrice","changeMaxPrice","limit","changeData","isShowModal","changeIsShowModal","modalContent","changeModalContent","detailLink","changeDetailLink","productTypesList","changeProductTypesList","productTypeQuery","changeProductTypeQuery","productQuantity","changeProductQuantity","changeInStock","useEffect","res","json","resJSON","length","slice","getData","message","path","component","cart","setItem","onKeyUp","trim","type","elem","selected","productType","to","paddingRight","row","paddingBottom","rowElement","clickOnCard","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.736c1b4a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nexport const RatingBar=(props)=>{\n    const rating=props.rating;\n    if(rating==0||rating>5){\n        return(<span></span>);\n    }\n    if(rating==1){\n        return(<span>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n        </span>\n        )\n    }\n    if(rating==2){\n        return(<span>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n        </span>)\n    }\n    if(rating==3){\n        return(<span>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n        </span>)\n    }\n    if(rating==4){\n        return(<span>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n        </span>)\n    }\n    if(rating==5){\n        return(\n            <span>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n            <i className=\"fa fa-star\" aria-hidden=\"true\"></i>\n        </span>\n        )\n    }\n}","import React from 'react';\nimport { RatingBar } from './RatingBar.js';\nexport const Card = (props) => {\n    let imgPath = props.imgPath;\n    let label = props.label;\n    let price = props.price;\n    let discountPercentage = props.discountPercentage;\n    let rating = props.rating;\n    let comments = props.comments;\n    let clickHandler = props.clickHandler;\n    // \n    return (\n        <div  onClick={clickHandler} style={{ cursor: \"pointer\" }} className=\"card-container\">\n            <div id=\"image\">\n                <img style={{ width: \"200px\", height: \"200px\" }} src={imgPath} />\n            </div>\n            <div id=\"label\">\n                {label}\n            </div>\n            <div id=\"price\">\n                <span >\n                    {price} <span className=\"underline\">đ</span>\n                </span>\n                <span id=\"discountPercentage\">\n                    -{discountPercentage}%\n                </span>\n            </div>\n            <span id=\"old-price\">\n                <del>{Math.floor(price / (1 - discountPercentage / 100))}<span className=\"underline\">đ</span></del>\n            </span>\n            <div id=\"star-here\">\n                <RatingBar rating={rating} /> <span className=\"comments\">({comments} nhận xét)</span>\n            </div>\n        </div>\n    )\n\n}","import React,{useState} from 'react';\nexport const PaginationBar=(props)=>{\n    const clickHandler=props.clickHandler;\n    const icon=props.icon;\n    return (\n        <span style={{margin:\"10px 10px\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\n            <span onClick={clickHandler} style={{fontWeight:\"bold\",cursor:\"pointer\",paddingTop:\"20px\",fontSize:\"20px\"}}>\n                {icon}\n            </span>\n        </span>\n    )\n}\n","import React, { useState } from 'react';\nexport const Modal = (props) => {\n    let isShow = props.isShow;\n    let quitModal = props.quitModal;\n    let content = props.content;\n    let imgSource = props.imgSource;\n    let addToCart=props.addToCartHandler;\n    let increaseQuantity=props.increaseQuantityHandler;\n    let decreaseQuantity=props.decreaseQuantityHandler;\n    let count=props.count;\n    let inStock=props.inStock;\n    return (\n        <div style={{\n            width: \"100%\"\n            , height: \"100%\"\n            , display: isShow ? \"\" : \"none\"\n            , position: \"fixed\"\n            , zIndex: \"1\"\n            , left: 0\n            , top: 0\n            , overflow: \"auto\"\n            , backgroundColor: \"rgba(0,0,0,0.4)\"\n        }}>\n            <div style={{\n                backgroundColor: \"#fefefe\"\n                , margin: \"15% auto\"\n                , padding: \"20px\"\n                , border: \"1px solid #dbdbdb\"\n                , width: \"80%\"\n            }}>\n                <span style={{\n                    color: \"#aaa\"\n                    , float: \"right\"\n                    , fontSize: \"28px\"\n                    , fontWeight: \"bold\"\n                    , cursor: \"pointer\"\n                }}\n                    onClick={quitModal}>&times;</span>\n                    <p>{content}</p>\n                    <p>{inStock==0?<div>Out of Stock</div>:inStock}</p>\n                    <p>Add To Cart</p>\n                    <div>\n                        <span>Quantity</span>\n                        <button onClick={increaseQuantity}>+</button>\n                        <button onClick={decreaseQuantity}>-</button>\n                        <div>{count}</div>\n                    </div>\n                    \n                    <button onClick={addToCart} style={{ cursor: \"pointer\" }}>\n                        Add\n                    </button>\n\n\n                <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n                    {imgSource.map((link) => {\n                        return (\n                            <img style={{\n                                width: \"200px\"\n                                , height: \"200px\"\n                            }} src={link} />\n                        )\n                    })}\n                </div>\n\n\n            </div>\n        </div>\n    )\n\n}","import React, { useState } from 'react';\nimport '../public/Cart.css'\nrequire('dotenv').config();\nexport const Cart = () => {\n    let products = JSON.parse(localStorage.getItem('cart'));\n    async function submitHandler(e) {\n        e.preventDefault();\n        let data = {\n            name: name,\n            phone: phone,\n            email: email,\n            address: address,\n            products: products\n        };\n        let response = await fetch(`${process.env.REACT_APP_BASE_URL_DEV}/payment`, {\n            method: 'POST'\n            , mode: 'cors'\n            , headers: {\n                'Content-Type': 'application/json'\n            }\n            , body: JSON.stringify(data)\n        });\n        if (response.status === 200) {\n            alert('Success');\n            localStorage.clear('cart');\n            localStorage.clear('flag');\n        }\n        else {\n            alert('Fill all required fields');\n        }\n    }\n    let [name, changeName] = useState(\"\");\n    let [phone, changePhone] = useState(\"\");\n    let [email, changeEmail] = useState(\"\");\n    let [address, changeAdress] = useState(\"\");\n    const changeNameHandler = (e) => {\n        changeName(e.target.value);\n    }\n    const changePhoneHandler = (e) => {\n        changePhone(e.target.value);\n    }\n    const changeEmailHandler = (e) => {\n        changeEmail(e.target.value);\n    }\n    const changeAddressHandler = (e) => {\n        changeAdress(e.target.value);\n    }\n    return (\n        <div>\n            <div id='submit-form' style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\", paddingTop: \"100px\" }}>\n                <div>\n                    Cart\n            </div>\n                <form onSubmit={submitHandler} style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <div className=\"input-wrapper\">\n                        <input onChange={changeNameHandler} value={name} placeholder=\"name\"></input>\n                        <div className='error'></div>\n                    </div>\n                    <div className=\"input-wrapper\">\n                        <input onChange={changePhoneHandler} value={phone} placeholder=\"phone\"></input>\n                        <div className='error'></div>\n                    </div>\n                    <div className=\"input-wrapper\">\n                        <input onChange={changeEmailHandler} value={email} placeholder=\"email\"></input>\n                        <div className='error'></div>\n                    </div>\n                    <div className=\"input-wrapper\">\n                        <input onChange={changeAddressHandler} value={address} placeholder=\"address\"></input>\n                        <div className='error'></div>\n                    </div>\n                    <div className=\"input-wrapper\">\n                        {\n                            products != null ?\n                                products.map((product) => {\n                                    return (\n                                        <div>\n                                            <div style={{ fontWeight: \"bold\" }}>{product.productName}</div>\n                                            <div>{product.quantity}</div>\n                                        </div>\n                                    )\n                                })\n                                : (<div></div>)}\n                    </div>\n                    <button id='submit-btn'>Submit</button>\n                </form>\n            </div>\n        </div>\n\n    )\n}\n\n","import React, { useEffect, useState } from 'react';\nimport { Card } from './Card';\nimport '../public/Card.css';\nimport '../public/MyWebPage.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { PaginationBar } from './PaginationBar.js';\nimport { Modal } from './Modal.js';\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport { Cart } from './Cart.js';\nexport function MyWebPage(props) {\n    // Control searchbox\n    function keyUpHandler(e) {\n        console.log(input);\n        changeProductName(input.trim());\n        changeMinPrice(\"\");\n        changeMaxPrice(\"\");\n        changePage(1)\n        console.log(`page: ${page}`);\n    }\n    let [input, changeInput] = useState(\"Search here\");\n    let [toggle, changeToggle] = useState(false)\n    let onChange = (e) => {\n        changeInput(e.target.value);\n    }\n    // -------------------//\n    const baseUrl = props.baseUrl;\n    let [page, changePage] = useState(1);\n    let [maxPages, changeMaxPages] = useState(10000);\n    let [productName, changeProductName] = useState(\"\");\n    let [minPrice, changeMinPrice] = useState(\"\");\n    let [maxPrice, changeMaxPrice] = useState(\"\");\n    const [limit, changeLimit] = useState(12);\n    const [data, changeData] = useState([]);\n    let [isShowModal, changeIsShowModal] = useState(false);\n    let [modalContent, changeModalContent] = useState(\"\");\n    let [detailLink, changeDetailLink] = useState([]);\n    let [productTypesList, changeProductTypesList] = useState([]);\n    let [productTypeQuery, changeProductTypeQuery] = useState(\"\");\n    let [productQuantity, changeProductQuantity] = useState(0);\n    let [inStock, changeInStock] = useState(0);\n    let flag = false;\n    useEffect(() => {\n        async function getData() {\n            await fetch(`${baseUrl}/product?page=${page}&limit=${limit}&productName=${productName}&minPrice=${minPrice}&maxPrice=${maxPrice}&productType=${productTypeQuery}`).then((res) => {\n                res.json().then((resJSON) => {\n                    if (resJSON.length > 1) {\n                        changeData([resJSON.slice(0, 4), resJSON.slice(4, 8), resJSON.slice(8, 12)]);\n                        if (resJSON.length < 12) {\n                            changeMaxPages(page);\n                        }\n                    }\n                    else {\n                        console.log('bug')\n                        changeData([resJSON.slice(0, 4), resJSON.slice(4, 8), resJSON.slice(8, 12)]);\n                    }\n                })\n            })\n        }\n        try {\n            getData()\n        } catch (error) {\n            console.log(error.message);\n        }\n    }, [page, productName, minPrice, maxPrice, productTypeQuery]);\n    useEffect(async () => {\n        try {\n            let result = await fetch(`${baseUrl}:3000/productType`);\n            result.json().then((resJSON) => {\n                changeProductTypesList(productTypesList = resJSON)\n            })\n        } catch (error) {\n            console.log(error.message);\n        }\n    }, []);\n    function clickOnCard(productName, inStock) {\n        changeIsShowModal(!isShowModal);\n        changeModalContent(productName);\n        changeInStock(inStock);\n        changeDetailLink([`${baseUrl}/assets/detail?productName=${productName}&id=0`,\n        `${baseUrl}/assets/detail/?productName=${productName}&id=1`,\n        `${baseUrl}/assets/detail/?productName=${productName}&id=2`]);\n    }\n    function onChangeHandlerMin(e) {\n        console.log(e.target.value);\n        changePage(1);\n        changeMinPrice(e.target.value);\n    }\n    function onChangeHandlerMax(e) {\n        console.log(e.target.value);\n        changePage(1);\n        changeMaxPrice(e.target.value);\n    }\n    function onChangeHandlerType(e) {\n        console.log(e.target.value);\n        changeProductTypeQuery(productTypeQuery = e.target.value);\n    }\n    // Cần có 1 api fetch product quantity theo productName\n    function addToCartHandler(e) {\n        console.log(`${modalContent}: ${productQuantity}`);\n        if (!localStorage.getItem('flag')) {\n            localStorage.setItem('flag', flag);\n            let cart = [\n                {\n                    productName: modalContent,\n                    quantity: productQuantity\n                }\n            ]\n            localStorage.setItem('cart', JSON.stringify(cart));\n        } else {\n            let cart = JSON.parse(localStorage.getItem('cart'));\n            cart = [\n                ...cart,\n                {\n                    productName: modalContent,\n                    quantity: productQuantity\n                }\n            ]\n            localStorage.setItem('cart', JSON.stringify(cart));\n        }\n        // changeFlag(true);\n        localStorage.setItem('flag', true);\n    }\n    function increaseQuantityHandler(e) {\n        if (productQuantity < inStock) {\n            changeProductQuantity(++productQuantity);\n        }\n        console.log(productQuantity);\n    }\n    function decreaseQuantityHandler(e) {\n        if (productQuantity > 0) {\n            changeProductQuantity(--productQuantity)\n        }\n        console.log(productQuantity);\n    }\n    function goToCart() {\n        console.log(JSON.parse(localStorage.getItem('cart')));\n        console.log(BrowserRouter);\n        console.log(Route);\n        // return (<Modal isShow={isShowModal} />)\n    }\n    return (\n        <Switch>\n            <Route path=\"/cart\" component={Cart}></Route>\n            <div id=\"container\">\n                <Modal isShow={isShowModal} content={modalContent} quitModal={() => {\n                    changeIsShowModal(!isShowModal);\n                    changeProductQuantity(0);\n                }} imgSource={detailLink} addToCartHandler={addToCartHandler} increaseQuantityHandler={increaseQuantityHandler}\n                    decreaseQuantityHandler={decreaseQuantityHandler} count={productQuantity} inStock={inStock} />\n                <div style={{\n                    display: \"flex\"\n                    , flexDirection: \"row-reverse\"\n                    , padding: \"40px 40px 40px 40px\"\n                    , border: \"1px solid #dbdbdb\"\n                    , position: \"relative\"\n                }} id=\"header\">\n                    <div id=\"searchBox\">\n                        <div>\n                            <input onKeyUp={keyUpHandler} value={input} onClick={() => {\n                                if (!toggle) {\n                                    changeInput(\"\");\n                                }\n                                changeToggle(true)\n                            }} onChange={onChange} type=\"text\" ></input>\n                        </div>\n                    </div>\n\n                    <div>\n                        <span>Max Price</span>\n                        <select onChange={onChangeHandlerMax} id=\"filter\">\n                            {([7000000, 10000000, 15000000, 20000000, 25000000, 30000000, 35000000]).map((elem) => {\n                                return (<option value={elem}>{elem / 1000000} triệu</option>)\n                            })}\n                            <option selected=\"selected\">Chọn giá lớn nhất</option>\n                        </select>\n                    </div>\n                    <div>\n                        <span>Min Price</span>\n                        <select onChange={onChangeHandlerMin}>\n                            {([5000000, 7000000, 10000000, 15000000, 20000000, 25000000]).map((elem) => {\n                                return (<option value={elem}>{elem / 1000000} triệu</option>)\n                            })}\n                            <option selected=\"selected\">Chọn giá nhỏ nhất</option>\n                        </select>\n                    </div>\n                    {/* Filter by type */}\n                    <div>\n                        <span>Loại</span>\n                        <select onChange={onChangeHandlerType} id=\"filter\">\n                            {\n                                productTypesList.map((productType) => {\n                                    return (<option value={productType}>{productType}</option>)\n                                })\n                            }\n                            <option selected=\"selected\">Sản phẩm theo Loại</option>\n                        </select>\n                    </div>\n                    {/* <span onClick={goToCart} style={{ cursor: \"pointer\", paddingRight: \"20px\" }}>\n                        Cart\n                </span> */}\n                    <Link to=\"/cart\" style={{ paddingRight: \"20px\" }}>Go To Cart</Link>\n\n                    <span style={{\n                        position: \"absolute\",\n                        left: \"40px\",\n                        top: \"40px\",\n                        cursor: \"pointer\",\n                        justifyContent: \"flex-end\"\n                    }} id=\"back-to-home\" onClick={() => {\n                        changePage(1);\n                        changeMinPrice(\"\");\n                        changeMaxPrice(\"\");\n                        changeProductName(\"\");\n                        changeProductTypeQuery([])\n                    }}>\n                        HOME\n                </span>\n                </div>\n                <div style={{ padding: \"100px 50px 50px 100px\" }} id=\"body\">\n                    {data.map((row) => {\n                        return (\n                            <div style={{ paddingTop: \"30px\", paddingBottom: \"30px\" }} className=\"row\" >\n                                {row.map((rowElement) => {\n                                    return (<Card clickHandler={() => {\n                                        clickOnCard(rowElement.productName, rowElement.inStock)\n                                    }} imgPath={`${baseUrl}${rowElement.link}`} label={rowElement.productName}\n                                        price={rowElement.price} discountPercentage=\"1\" rating=\"4\" comments=\"3\" />)\n                                })}\n                            </div>\n                        )\n                    })}\n                </div>\n                <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }} id=\"footer\">\n                    <PaginationBar icon=\"<\" clickHandler={() => {\n                        if (page > 1) {\n                            changePage(--page);\n                            // console.log(`page: ${page}`);\n                        }\n                    }} />\n                    <PaginationBar icon=\">\" clickHandler={() => {\n                        if (page < maxPages) {\n                            changePage(++page);\n                            // console.log(`page: ${page}`);\n                        }\n                    }} />\n                </div>\n            </div>\n        </Switch>\n\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { MyWebPage } from '../src/components/MyWebPage';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nrequire('dotenv').config();\n\nReactDOM.render(\n  <BrowserRouter>\n    <MyWebPage baseUrl={process.env.REACT_APP_BASE_URL_DEV} />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.register();\n"],"sourceRoot":""}